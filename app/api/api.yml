openapi: 3.0.0
info:
  version: 1.0.0
  title: flsk_api
servers:
  - url: 'http://localhost:5000'
tags:
  - name: home
    description: Homescreen
  - name: user
    description: User access
  - name: post
    description: Post operations
paths:
  /:
    get:
      summary: 'Home endpoint: Returns default return'
      operationId: home
      tags:
        - home
      responses:
        '200':
          description: 'Sample response: Default response format'
          content:
            application/json:
              schema:
                  $ref: '#/components/schemas/Response'
        default:
          description: Unexpected error
          content: 
            application/json:
              schema:
                  $ref: '#/components/schemas/Error'
  /login:
    post:
      summary: 'Logs in an user'
      operationId: login
      tags:
        - user
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Login'
      responses:
        '200':
          description: 'Login successful'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LoginResponse'
  /user/changepassword:
    post:
      summary: 'Change current user password'
      operationId: change_password
      tags:
        - user
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ChangePassword'
      responses:
        '200':
          description: 'Password updated'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Response'
      security:
        - bearerAuth: []
  /user/subscribe:
    post:
      summary: 'Register new user'
      operationId: subscribe
      tags:
        - user
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Register'
      responses:
        '200':
          description: 'Registration successful'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Response'
  /user/profile:
    get:
      summary: 'Sample endpoint: Returns details about current user'
      operationId: profile
      tags:
        - user
      responses:
        '200':
          description: 'Sample response: Details about current user'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Response'
        default:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      security:
        - bearerAuth: []
  /posts/mine:
    get:
      summary: 'My posts'
      operationId: my_posts
      tags:
        - post
      responses:
        '200':
          description: 'Sample response: List of my posts'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Response'
      security:
        - bearerAuth: []
  /posts/{post_id}:
    get:
      summary: 'Read post'
      operationId: read_post
      tags:
        - post
      parameters:
        - name: post_id
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: 'Get post details'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Response'
        default:
          description: 'Not found'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      security:
        - bearerAuth: []
    delete:
      summary: 'Delete post'
      operationId: delete_post
      tags:
        - post
      parameters:
        - name: post_id
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: 'Post successfully deleted'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Response'
        default:
          description: 'Error occurred'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      security:
        - bearerAuth: []
  /posts/create:
    post:
      summary: 'Create post'
      operationId: create_post
      tags:
        - post
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Post'
      responses:
        '201':
          description: 'Post created'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Response'
        default:
          description: 'Error occurred'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      security:
        - bearerAuth: []
  /posts/update:
    put:
      summary: 'Update post'
      operationId': update_post
      tags:
        - post
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Post'
      responses:
        '200':
          description: 'Post updated'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Response'
        default:
          description: 'Error occurred'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      security:
        - bearerAuth: []
components:
  schemas:
    Login:
      type: object
      required:
        - login
        - password
      properties:
        login:
          type: string
        password:
          type: string
    Register:
      type: object
      required:
        - email
        - username
        - password
      properties:
        email:
          type: string
        username:
          type: string
        password:
          type: string
    Response:
      type: object
      required:
        - message
        - success
        - data
      properties:
        message:
          type: string
        success:
          type: boolean
        data:
          type: object
    LoginResponse:
      type: object
      required:
        - access_token
      properties:
        access_token:
          type: string
    Post:
      type: object
      required:
        - title
        - body
      properties:
        id:
          type: integer
          format: int64
        title:
          type: string
        body:
          type: string
    User:
      type: object
      required:
        - id
        - name
      properties:
        id:
          type: integer
          format: int64
        name:
          type: string
        email:
          type: string
    ChangePassword:
      type: object
      required:
        - current_password
        - new_password
        - confirm_new_password
      properties:
        current_password:
          type: string
        new_password:
          type: string
        confirm_new_password:
          type: string
    Error:
      type: object
      required:
        - success
        - message
        - data
      properties:
        message:
          type: string
        success:
          type: boolean
        data:
          type: object
  securitySchemes:
    bearerAuth:
      type: http
      in: header
      name: Authorization
      scheme: bearer
      bearerFormat: JWT